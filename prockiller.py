import ctypes

uhandle = ctypes.WinDLL("User32.dll")
khandle = ctypes.WinDLL("Kernel32.dll")

PROCESS_ALL_ACCESS = ( 0x000F0000 | 0x00100000 | 0xFFF )
dwDesiredAccess = PROCESS_ALL_ACCESS 
bInheritHandle = False

lpWindowName = ctypes.c_char_p(input("Enter window name to kill ").encode('UTF-8'))
#print(lpWindowName) 

findwindow = uhandle.FindWindowA(None, lpWindowName)
#lpClassName

if findwindow ==0:
    print("Couldn't get handle \n")
    exit(1)
else:
    print("Got handle!!")


lpdwProcessId = ctypes.c_ulong()
response = uhandle.GetWindowThreadProcessId(findwindow, ctypes.byref(lpdwProcessId))
if response == 0:
    print("Couldn't get PID!! Error Code: {0}".format(khandle.GetLastError()))
    exit(1)
else:
    print("Got PID")

dwProcessId = lpdwProcessId

hProcess = khandle.OpenProcess(dwDesiredAccess, bInheritHandle,dwProcessId)
if hProcess <= 0:
    print("Couldn't grab handle")
    exit(1)
else:
    print("Got Handle")

uExitcode = 0x1
response = khandle.TerminateProcess(hProcess,uExitcode)

if response == 0:
    print("Couldn't terminate! {0}".format(khandle.GetLastError()))
else:
    print("Process killed!! \n")